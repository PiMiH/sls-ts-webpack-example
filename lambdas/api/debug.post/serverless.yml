service: ${self:custom.ENV.PRODUCT_NAME}-${self:custom.ENV.STACK_ID}-api-debug-post

plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.ENV.STAGE}
  region: ${self:custom.ENV.REGION}
  deploymentBucket:
    name: ${self:custom.ENV.SLS_DEPLOYMENT_BUCKET_NAME}
  httpApi:
    id: ${self:custom.ENV.API_PRIMARY_ID}
    payload: '2.0'

package:
  individually: true

custom:
  ENV: ${file(../../../env.json)}
  webpack:
    webpackConfig: ../../webpack.config.js

functions:
  function:
    handler: index.handler
    # role: LambdaExecutionRole
    memorySize: 256
    environment:
      PRODUCT_NAME: ${self:custom.ENV.PRODUCT_NAME}
      STACK_ID: ${self:custom.ENV.STACK_ID}
      REGION: ${self:custom.ENV.REGION}
      DEBUG_MODE: ${self:custom.ENV.DEBUG_MODE}
      STAGE: ${self:custom.ENV.STAGE}
      SLS_DEPLOYMENT_BUCKET_NAME: ${self:custom.ENV.SLS_DEPLOYMENT_BUCKET_NAME}
      API_PRIMARY_ID: ${self:custom.ENV.API_PRIMARY_ID}
    events:
      - httpApi:
          method: POST
          path: /api/v1/debug

# resources:
#   Resources:
#     LambdaExecutionRole:
#       Type: AWS::IAM::Role
#       Properties:
#         AssumeRolePolicyDocument:
#           Version: '2012-10-17'
#           Statement:
#           - Effect: Allow
#             Principal:
#               Service:
#               - lambda.amazonaws.com
#             Action:
#             - sts:AssumeRole
#         Path: "/"
#         Policies:
#         - PolicyName: root
#           PolicyDocument:
#             Version: '2012-10-17'
#             Statement:
#             - Effect: Allow
#               Action:
#               - s3:*
#               - logs:CreateLogStream
#               - logs:PutLogEvents
#               Resource: "*"